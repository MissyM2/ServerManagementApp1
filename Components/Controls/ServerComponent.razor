@inject NavigationManager NavigationManager

@if (Server != null)
{
    <li @key="Server.ServerId">
        @Server.Name in @Server.City is
        <span style="color:@(Server.IsOnline ? "green" : "red")">
            @(Server.IsOnline ? "online" : "offline")
        </span>

        <button type="button" class="btn btn-link" @onclick="@(() => { editingServer = !editingServer; })">
            Edit
        </button>
        &nbsp;
        <EditForm
            Model="Server"
            FormName="@($"form-server-{Server.ServerId}")"
            OnValidSubmit="@(() => { DeleteServer(Server.ServerId); })">
            <button type="submit" class="btn btn-primary">Delete
            </button>
        </EditForm>

        @if (editingServer)
        {
            <ServerManagementApp1.Components.Pages.EditServer
                Id="Server.ServerId"></ServerManagementApp1.Components.Pages.EditServer>
        }
    </li>
}


@code {
    private bool editingServer;
    [Parameter] public Server? Server { get; set; }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true);
        }
    }

}